package com.training.demo.helpers.Reports;

import com.training.demo.dto.response.User.ExportUserResponse;
import net.sf.jasperreports.engine.*;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.design.*;
import net.sf.jasperreports.engine.type.*;
import java.awt.*;
import java.util.HashMap;
import java.util.List;

public class JasperReportGenerator {

    public JasperPrint generateUserReport(List<ExportUserResponse> users) throws JRException {
        JasperDesign jasperDesign = new JasperDesign();
        jasperDesign.setName("user_report");
        jasperDesign.setPageWidth(595);
        jasperDesign.setPageHeight(842);
        jasperDesign.setColumnWidth(555);
        jasperDesign.setLeftMargin(20);
        jasperDesign.setRightMargin(20);
        jasperDesign.setTopMargin(20);
        jasperDesign.setBottomMargin(20);

        // ====== Fields ======
        String[][] fields = {
                {"id", "java.lang.Long"},
                {"firstName", "java.lang.String"},
                {"lastName", "java.lang.String"},
                {"username", "java.lang.String"},
                {"email", "java.lang.String"},
                {"status", "java.lang.String"},
                {"roleName", "java.lang.String"}
        };
        for (String[] f : fields) {
            JRDesignField field = new JRDesignField();
            field.setName(f[0]);
            field.setValueClassName(f[1]);
            jasperDesign.addField(field);
        }

        // ====== Title ======
        JRDesignBand titleBand = new JRDesignBand();
        titleBand.setHeight(50);

        JRDesignStaticText titleText = new JRDesignStaticText();
        titleText.setX(0);
        titleText.setY(10);
        titleText.setWidth(555);
        titleText.setHeight(30);
        titleText.setText("USER REPORT");
        titleText.setHorizontalTextAlign(HorizontalTextAlignEnum.CENTER);
        titleText.setVerticalTextAlign(VerticalTextAlignEnum.MIDDLE);
        titleText.setFontSize(20f);
        titleText.setBold(true);
        titleText.setForecolor(new Color(40, 40, 40));

        titleBand.addElement(titleText);
        jasperDesign.setTitle(titleBand);

        // ====== Column Header ======
        JRDesignBand columnHeader = new JRDesignBand();
        columnHeader.setHeight(25);

        int x = 0;
        columnHeader.addElement(createHeaderCell("ID", x, 35)); x += 35;
        columnHeader.addElement(createHeaderCell("First Name", x, 90)); x += 90;
        columnHeader.addElement(createHeaderCell("Last Name", x, 90)); x += 90;
        columnHeader.addElement(createHeaderCell("Username", x, 90)); x += 90;
        columnHeader.addElement(createHeaderCell("Email", x, 130)); x += 130;
        columnHeader.addElement(createHeaderCell("Status", x, 60)); x += 60;
        columnHeader.addElement(createHeaderCell("Role", x, 60));
        jasperDesign.setColumnHeader(columnHeader);

        // ====== Detail ======
        JRDesignBand detailBand = new JRDesignBand();
        detailBand.setHeight(20);

        int dx = 0;
        detailBand.addElement(createDetailCell("($F{id} == null) ? \"—\" : String.valueOf($F{id})", dx, 35)); dx += 35;
        detailBand.addElement(createDetailCell("($F{firstName} == null) ? \"—\" : $F{firstName}", dx, 90)); dx += 90;
        detailBand.addElement(createDetailCell("($F{lastName} == null) ? \"—\" : $F{lastName}", dx, 90)); dx += 90;
        detailBand.addElement(createDetailCell("($F{username} == null) ? \"—\" : $F{username}", dx, 90)); dx += 90;
        detailBand.addElement(createDetailCell("($F{email} == null) ? \"—\" : $F{email}", dx, 130)); dx += 130;

        // STATUS có conditional color
        JRDesignTextField statusField = createDetailCell("($F{status} == null) ? \"—\" : $F{status}", dx, 60);
        applyConditionalStatusColor(jasperDesign, statusField);
        detailBand.addElement(statusField);
        dx += 60;

        // ROLE
        detailBand.addElement(createDetailCell("($F{roleName} == null) ? \"—\" : $F{roleName}", dx, 60));

        ((JRDesignSection) jasperDesign.getDetailSection()).addBand(detailBand);

        // ====== Footer ======
        JRDesignBand footerBand = new JRDesignBand();
        footerBand.setHeight(25);

        JRDesignTextField footerText = new JRDesignTextField();
        footerText.setX(0);
        footerText.setY(0);
        footerText.setWidth(555);
        footerText.setHeight(20);
        footerText.setExpression(new JRDesignExpression("\"Generated by Admin | Page \" + $V{PAGE_NUMBER}"));
        footerText.setHorizontalTextAlign(HorizontalTextAlignEnum.RIGHT);
        footerText.setVerticalTextAlign(VerticalTextAlignEnum.MIDDLE);
        footerText.setFontSize(9f);
        footerText.setForecolor(Color.DARK_GRAY);

        footerBand.addElement(footerText);
        jasperDesign.setPageFooter(footerBand);

        // ====== Compile & Fill ======
        JasperReport jasperReport = JasperCompileManager.compileReport(jasperDesign);
        JRBeanCollectionDataSource dataSource = new JRBeanCollectionDataSource(users);
        return JasperFillManager.fillReport(jasperReport, new HashMap<>(), dataSource);
    }

    private JRDesignStaticText createHeaderCell(String text, int x, int width) {
        JRDesignStaticText header = new JRDesignStaticText();
        header.setX(x);
        header.setY(0);
        header.setWidth(width);
        header.setHeight(25);
        header.setText(text);
        header.setHorizontalTextAlign(HorizontalTextAlignEnum.CENTER);
        header.setVerticalTextAlign(VerticalTextAlignEnum.MIDDLE);
        header.setFontSize(12f);
        header.setBold(true);
        header.setBackcolor(new Color(220, 230, 250));
        header.setMode(ModeEnum.OPAQUE);
        header.getLineBox().getPen().setLineWidth(0.5f);
        return header;
    }

    private JRDesignTextField createDetailCell(String expression, int x, int width) {
        JRDesignTextField field = new JRDesignTextField();
        field.setX(x);
        field.setY(0);
        field.setWidth(width);
        field.setHeight(20);
        field.setExpression(new JRDesignExpression(expression));
        field.setHorizontalTextAlign(HorizontalTextAlignEnum.CENTER);
        field.setVerticalTextAlign(VerticalTextAlignEnum.MIDDLE);
        field.setFontSize(10.5f);
        field.getLineBox().getPen().setLineWidth(0.25f);
        field.getLineBox().getPen().setLineColor(new Color(180, 180, 180));
        return field;
    }

    private void applyConditionalStatusColor(JasperDesign design, JRDesignTextField field) throws JRException {
        JRDesignStyle style = new JRDesignStyle();
        style.setName("StatusStyle");

        JRDesignConditionalStyle active = new JRDesignConditionalStyle();
        active.setConditionExpression(new JRDesignExpression("$F{status} != null && $F{status}.equals(\"ACTIVE\")"));
        active.setBackcolor(new Color(198, 239, 206));
        active.setMode(ModeEnum.OPAQUE);

        JRDesignConditionalStyle inactive = new JRDesignConditionalStyle();
        inactive.setConditionExpression(new JRDesignExpression("$F{status} != null && $F{status}.equals(\"INACTIVE\")"));
        inactive.setBackcolor(new Color(255, 235, 156));
        inactive.setMode(ModeEnum.OPAQUE);

        JRDesignConditionalStyle banned = new JRDesignConditionalStyle();
        banned.setConditionExpression(new JRDesignExpression("$F{status} != null && $F{status}.equals(\"BANNED\")"));
        banned.setBackcolor(new Color(244, 204, 204));
        banned.setMode(ModeEnum.OPAQUE);

        style.addConditionalStyle(active);
        style.addConditionalStyle(inactive);
        style.addConditionalStyle(banned);
        design.addStyle(style);

        field.setStyle(style);
    }
}
